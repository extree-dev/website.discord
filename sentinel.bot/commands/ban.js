// commands/ban.js
const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

module.exports = {
    data: new SlashCommandBuilder()
        .setName('ban')
        .setDescription('–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –±–∞–Ω–∞')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('reason')
                .setDescription('–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞')
                .setRequired(true))
        .addIntegerOption(option =>
            option.setName('days')
                .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (0-7)')
                .setMinValue(0)
                .setMaxValue(7))
        .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers),

    async execute(interaction) {
        const startTime = Date.now();

        try {
            const targetUser = interaction.options.getUser('user');
            const reason = interaction.options.getString('reason');
            const deleteDays = interaction.options.getInteger('days') || 0;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
            if (!interaction.member.permissions.has(PermissionFlagsBits.BanMembers)) {
                return await interaction.reply({
                    content: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                    flags: 64
                });
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–Ω–æ –ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const targetMember = await interaction.guild.members.fetch(targetUser.id).catch(() => null);
            if (targetMember) {
                if (targetMember.roles.highest.position >= interaction.member.roles.highest.position) {
                    return await interaction.reply({
                        content: '‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–∞–≤–Ω–æ–π –∏–ª–∏ –≤—ã—Å—à–µ–π —Ä–æ–ª—å—é',
                        flags: 64
                    });
                }
            }

            // –ë–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await interaction.guild.members.ban(targetUser.id, {
                deleteMessageSeconds: deleteDays * 24 * 60 * 60,
                reason: reason
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await prisma.bannedUser.create({
                data: {
                    discordId: targetUser.id,
                    username: targetUser.username,
                    discriminator: targetUser.discriminator,
                    avatar: targetUser.avatar,
                    guildId: interaction.guild.id,
                    bannedBy: interaction.user.id,
                    bannedByUsername: interaction.user.username,
                    reason: reason,
                    deleteDays: deleteDays,
                    bannedAt: new Date()
                }
            });

            const responseTime = Date.now() - startTime;

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–º–∞–Ω–¥—ã
            await prisma.commandStats.create({
                data: {
                    command: 'ban',
                    guildId: interaction.guild.id,
                    userId: targetUser.id,
                    success: true,
                    executionTime: responseTime,
                    timestamp: new Date()
                }
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç—Ä–µ–∫–µ—Ä –ø–∞–º—è—Ç–∏
            if (global.commandTracker) {
                global.commandTracker.recordCommand(
                    'ban',
                    true,
                    responseTime,
                    interaction.guild.id,
                    targetUser.id
                );
            }

            await interaction.reply({
                content: `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${targetUser} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω\nüìù –ü—Ä–∏—á–∏–Ω–∞: ${reason}\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${deleteDays} –¥–Ω–µ–π`,
                flags: 64
            });

        } catch (error) {
            console.error('Error in ban command:', error);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É –≤ –±–∞–∑—É
            await prisma.commandStats.create({
                data: {
                    command: 'ban',
                    guildId: interaction.guild.id,
                    userId: interaction.user.id,
                    success: false,
                    executionTime: 0,
                    error: error.message,
                    timestamp: new Date()
                }
            });

            await interaction.reply({
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã',
                flags: 64
            });
        }
    }
};