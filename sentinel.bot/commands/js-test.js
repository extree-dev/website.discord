const { SlashCommandBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('alerts-test')
        .setDescription('–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∞–ª–µ—Ä—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã')
        .addStringOption(option =>
            option.setName('type')
                .setDescription('–¢–∏–ø –∞–ª–µ—Ä—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
                .setRequired(true)
                .addChoices(
                    { name: 'üö® –°–ø–∞–º –∞—Ç–∞–∫–∞', value: 'spam_attack' },
                    { name: 'üë• –ú–∞—Å—Å–æ–≤—ã–π –≤—Ö–æ–¥', value: 'mass_join' },
                    { name: 'üìà –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞', value: 'high_traffic' },
                    { name: 'üïµÔ∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', value: 'suspicious_activity' },
                    { name: '‚ö†Ô∏è –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª', value: 'rule_violation' }
                )),

    async execute(interaction) {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ (1399388382492360908 - Chief Administrator)
            const allowedRoleId = '1399388382492360908';
            if (!interaction.member.roles.cache.has(allowedRoleId)) {
                return await interaction.reply({
                    content: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å Chief Administrator.',
                    flags: 64
                });
            }

            const alertType = interaction.options.getString('type');

            // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–ª–µ—Ä—Ç
            const alert = await global.alertSystem.createAlert(alertType, getSeverityByType(alertType), {
                title: getAlertTitle(alertType),
                description: getAlertDescription(alertType),
                guildId: interaction.guild.id,
                data: {
                    test: true,
                    triggeredBy: interaction.user.tag,
                    triggeredById: interaction.user.id,
                    triggeredAt: new Date().toISOString(),
                    note: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–ª–µ—Ä—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /alert-test'
                }
            });

            // –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
            if (global.commandTracker) {
                await global.commandTracker.recordCommand(
                    'alert-test',
                    true,
                    0,
                    interaction.guild.id,
                    interaction.user.id
                );
            }

            await interaction.reply({
                content: `‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–ª–µ—Ä—Ç —Å–æ–∑–¥–∞–Ω! –¢–∏–ø: **${getAlertTypeName(alertType)}**\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.`,
                flags: 64
            });

        } catch (error) {
            console.error('Error in alert-test command:', error);

            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            if (global.commandTracker) {
                await global.commandTracker.recordCommand(
                    'alert-test',
                    false,
                    0,
                    interaction.guild.id,
                    interaction.user.id,
                    error.message
                );
            }

            await interaction.reply({
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–ª–µ—Ä—Ç–∞',
                flags: 64
            });
        }
    }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getSeverityByType(type) {
    const severityMap = {
        'spam_attack': 'high',
        'mass_join': 'medium',
        'high_traffic': 'medium',
        'suspicious_activity': 'high',
        'rule_violation': 'critical'
    };
    return severityMap[type] || 'medium';
}

function getAlertTitle(type) {
    const titleMap = {
        'spam_attack': 'üö® –°–ü–ê–ú –ê–¢–ê–ö–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê',
        'mass_join': 'üë• –ú–ê–°–°–û–í–´–ô –í–•–û–î –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô',
        'high_traffic': 'üìà –í–´–°–û–ö–ê–Ø –ù–ê–ì–†–£–ó–ö–ê –ù–ê –°–ï–†–í–ï–†',
        'suspicious_activity': 'üïµÔ∏è –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨',
        'rule_violation': '‚ö†Ô∏è –°–ï–†–¨–ï–ó–ù–û–ï –ù–ê–†–£–®–ï–ù–ò–ï –ü–†–ê–í–ò–õ'
    };
    return titleMap[type] || 'üîî –¢–ï–°–¢–û–í–´–ô –ê–õ–ï–†–¢';
}

function getAlertDescription(type) {
    const descriptionMap = {
        'spam_attack': '–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π',
        'mass_join': '–ù–µ–æ–±—ã—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–∏–æ–¥',
        'high_traffic': '–ü–∏–∫–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö',
        'suspicious_activity': '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ',
        'rule_violation': '–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–µ—Ä—å–µ–∑–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
    };
    return descriptionMap[type] || '–¢–µ—Å—Ç–æ–≤—ã–π –∞–ª–µ—Ä—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã';
}

function getAlertTypeName(type) {
    const nameMap = {
        'spam_attack': '–°–ø–∞–º –∞—Ç–∞–∫–∞',
        'mass_join': '–ú–∞—Å—Å–æ–≤—ã–π –≤—Ö–æ–¥',
        'high_traffic': '–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞',
        'suspicious_activity': '–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        'rule_violation': '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª'
    };
    return nameMap[type] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø';
}