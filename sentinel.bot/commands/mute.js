const { SlashCommandBuilder } = require('discord.js');
const config = require('../utils/config');
const logger = require('../utils/logger');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('mute')
    .setDescription('–ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    .addUserOption(option =>
      option.setName('user')
        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –º—É—Ç–∞')
        .setRequired(true))
    .addIntegerOption(option =>
      option.setName('duration')
        .setDescription('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö')
        .setRequired(true))
    .addStringOption(option =>
      option.setName('reason')
        .setDescription('–ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞')),

  async execute(interaction) {
    const targetUser = interaction.options.getUser('user');
    const duration = interaction.options.getInteger('duration');
    const reason = interaction.options.getString('reason') || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if (!interaction.member.permissions.has('MODERATE_MEMBERS')) {
      return interaction.reply({
        content: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',
        ephemeral: true
      });
    }

    const muteRole = interaction.guild.roles.cache.get(config.moderation.muteRoleId);
    if (!muteRole) {
      return interaction.reply({
        content: '‚ùå –†–æ–ª—å –¥–ª—è –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!',
        ephemeral: true
      });
    }

    try {
      const member = await interaction.guild.members.fetch(targetUser.id);

      await member.roles.add(muteRole, `–ú—É—Ç –Ω–∞ ${duration} –º–∏–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);

      await interaction.reply({
        content: `üîá ${targetUser.tag} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ ${duration} –º–∏–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`,
        ephemeral: false
      });

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞
      setTimeout(async () => {
        try {
          await member.roles.remove(muteRole, '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞');
          const channel = interaction.channel;
          if (channel) {
            await channel.send(`üîä ${targetUser.tag} –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`);
          }
        } catch (e) {
          logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞: ${e}`);
        }
      }, duration * 60 * 1000);

    } catch (error) {
      logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –º—É—Ç–∞: ${error}`);
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞
    }
  }
};