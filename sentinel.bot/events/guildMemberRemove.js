// events/guildMemberRemove.js  
const { Events } = require('discord.js');

module.exports = {
    name: Events.GuildMemberRemove,
    async execute(member) {
        if (member.guild.id !== process.env.GUILD_ID) return;

        console.log(`üî¥ User left: ${member.user.tag} (${member.guild.name})`);

        try {
            // 1. –û–ë–ù–û–í–õ–Ø–ï–ú –°–¢–ê–¢–ò–°–¢–ò–ö–£
            if (global.statsCollector) {
                setTimeout(() => {
                    global.statsCollector.saveServerStats(member.guild);
                }, 1000);
            }

            // 2. –ü–†–û–í–ï–†–Ø–ï–ú –ù–ê –ú–ê–°–°–û–í–´–ô –í–´–•–û–î (–Ω–æ–≤—ã–π –∞–ª–µ—Ä—Ç)
            await checkMassLeave(member);

            // 3. –õ–û–ì–ò–†–£–ï–ú –í –ë–ê–ó–£ –î–ê–ù–ù–´–•
            await logMemberLeave(member);

        } catch (error) {
            console.error('Error in guildMemberRemove event:', error);
        }
    },
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function checkMassLeave(member) {
    try {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã—Ö–æ–¥–∞
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—à–ª–æ –∑–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        const recentLeaves = await getRecentLeaves(member.guild.id);

        if (recentLeaves.length >= 5) { // 5+ —É—Ö–æ–¥–æ–≤ –∑–∞ 10 –º–∏–Ω—É—Ç
            if (global.alertSystem) {
                await global.alertSystem.createAlert('mass_leave', 'medium', {
                    title: 'üë• –ú–ê–°–°–û–í–´–ô –í–´–•–û–î –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô',
                    description: `–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${recentLeaves.length} —É—Ö–æ–¥–æ–≤ –∑–∞ 10 –º–∏–Ω—É—Ç`,
                    guildId: member.guild.id,
                    data: {
                        leaveCount: recentLeaves.length,
                        timeFrame: '10 minutes',
                        recentLeaves: recentLeaves.slice(-3),
                        recommendation: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã',
                        detectedAt: new Date().toISOString()
                    }
                });
            }
        }
    } catch (error) {
        console.error('Error checking mass leave:', error);
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function logMemberLeave(member) {
    try {
        if (global.commandTracker && global.commandTracker.prisma) {
            await global.commandTracker.prisma.memberLeave.create({
                data: {
                    userId: member.id,
                    username: member.user.tag,
                    guildId: member.guild.id,
                    joinedAt: member.joinedAt,
                    leftAt: new Date(),
                    wasKicked: false, // –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —á–µ—Ä–µ–∑ –∞—É–¥–∏—Ç –ª–æ–≥–∏
                    wasBanned: false
                }
            });
        }
    } catch (error) {
        console.error('Error logging member leave:', error);
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–∏—Ö —É—Ö–æ–¥–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
async function getRecentLeaves(guildId) {
    return [];
}