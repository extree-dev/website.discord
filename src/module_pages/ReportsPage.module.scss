@use '../styles/abstracts/mixins' as *;

.container {
    display: flex;
    min-height: 100vh;
    background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);
    color: #ffffff;
}

.fullscreen {
    padding: 2rem;
    min-height: 100vh;

    @include tablet {
        padding: 1.5rem;
    }

    @include mobile {
        padding: 1rem;
    }
}

// Header Styles
.header {
    margin-bottom: 2rem;
    animation: morphIn 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) both;
}

.headerTop {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;

    @include mobile {
        flex-direction: column;
        gap: 1rem;
    }
}

.headerTitle {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
}

.titleIcon {
    background: linear-gradient(135deg, #ef4444, #dc2626);
    padding: 0.75rem;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: floatIn 0.7s ease-out 0.2s both;

    .icon {
        width: 1.5rem;
        height: 1.5rem;
        color: white;
    }
}

.title {
    font-size: 2.25rem;
    font-weight: 800;
    color: var(--text-primary);
    margin: 0 0 0.25rem 0;
    background: linear-gradient(135deg, var(--text-primary), var(--text-secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: waveIn 0.8s ease-out 0.3s both;

    @include mobile {
        font-size: 1.75rem;
    }
}

.subtitle {
    font-size: 1.125rem;
    color: var(--text-secondary);
    margin: 0;
    font-weight: 400;
    animation: waveIn 0.8s ease-out 0.4s both;
}

.headerActions {
    display: flex;
    gap: 0.75rem;
    animation: waveIn 0.8s ease-out 0.5s both;

    @include mobile {
        width: 100%;
        justify-content: stretch;

        button {
            flex: 1;
        }
    }
}

.exportButton,
.refreshButton {
    @include button-base;
    padding: 0.75rem 1.25rem;
    border-radius: 24px;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.exportButton {
    background: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);

    &:hover:not(:disabled) {
        background: var(--border-color);
        transform: translateY(-1px);
    }
}

.refreshButton {
    background: var(--accent-color);
    color: white;

    &:hover:not(:disabled) {
        background: var(--accent-secondary);
        transform: translateY(-1px);
    }
}

.buttonIcon {
    width: 1rem;
    height: 1rem;
}

// Error Banner
.errorBanner {
    background: linear-gradient(135deg, #fef2f2, #fee2e2);
    border: 1px solid #fecaca;
    color: #dc2626;
    padding: 1rem 1.25rem;
    border-radius: 24px;
    margin-bottom: 2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    animation: waveIn 0.8s ease-out 0.6s both;

    [data-theme="dark"] & {
        background: linear-gradient(135deg, rgba(220, 38, 38, 0.1), rgba(220, 38, 38, 0.05));
        border-color: rgba(220, 38, 38, 0.3);
    }
}

.errorContent {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.errorIcon {
    width: 1.25rem;
    height: 1.25rem;
    flex-shrink: 0;
}

.errorText {
    font-weight: 500;
}

.errorClose {
    background: none;
    border: none;
    color: inherit;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;

    &:hover {
        background-color: rgba(0, 0, 0, 0.1);
    }
}

// Stats Grid
.statsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1.25rem;
    margin-bottom: 2rem;
}

.statCard {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    border-radius: 24px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    animation: floatIn 0.7s ease-out both;

    @for $i from 1 through 4 {
        &:nth-child(#{$i}) {
            animation-delay: #{0.7 + ($i * 0.1)}s;
        }
    }

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, var(--accent-color), var(--accent-secondary));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    &:hover {
        transform: translateY(-4px);
        border-color: var(--accent-color);

        &::before {
            opacity: 1;
        }
    }
}

.statIcon {
    background: var(--bg-secondary);
    padding: 0.75rem;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;

    .icon {
        width: 1.25rem;
        height: 1.25rem;
        color: var(--accent-color);
    }
}

.statContent {
    flex: 1;
}

.statNumber {
    font-size: 2rem;
    font-weight: 800;
    margin-bottom: 0.25rem;

    &.statPending {
        color: #f59e0b;
    }

    &.statReviewed {
        color: #3b82f6;
    }

    &.statResolved {
        color: #10b981;
    }

    &.statCritical {
        color: #ef4444;
    }
}

.statLabel {
    color: var(--text-secondary);
    font-size: 0.875rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

// Filters Section
.filtersSection {
    margin-bottom: 2rem;
}

.searchBox {
    position: relative;
    max-width: 400px;
    margin-bottom: 1rem;
    animation: waveIn 0.8s ease-out 0.8s both;
}

.searchIcon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    width: 1.25rem;
    height: 1.25rem;
    color: var(--text-secondary);
}

.searchInput {
    width: 100%;
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 24px;
    padding: 0.75rem 0.75rem 0.75rem 2.5rem;
    color: var(--text-primary);
    transition: all 0.2s ease;

    &:focus {
        outline: none;
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(var(--accent-color-rgb), 0.1);
    }
}

.filterButtons {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
    animation: waveIn 0.8s ease-out 0.9s both;
}

.filterToggle {
    @include button-base;
    background: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    padding: 0.75rem 1.25rem;
    border-radius: 24px;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    position: relative;

    &:hover {
        background: var(--border-color);
    }

    &.active {
        background: var(--accent-color);
        color: white;
        border-color: var(--accent-color);
    }
}

.filterCount {
    background: #ef4444;
    color: white;
    font-size: 0.75rem;
    padding: 0.125rem 0.375rem;
    border-radius: 9999px;
    min-width: 1.25rem;
    text-align: center;
}

.quickFilters {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.quickFilter {
    @include button-base;
    background: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    padding: 0.5rem 1rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    animation: waveIn 0.5s ease-out both;

    @for $i from 1 through 6 {
        &:nth-child(#{$i}) {
            animation-delay: #{1.0 + ($i * 0.1)}s;
        }
    }

    &:hover {
        background: var(--border-color);
    }

    &.active {
        background: var(--accent-color);
        color: white;
        border-color: var(--accent-color);
    }

    &.critical {
        background: #fef2f2;
        color: #dc2626;
        border-color: #fecaca;

        &:hover {
            background: #fee2e2;
        }

        [data-theme="dark"] & {
            background: rgba(220, 38, 38, 0.1);
            border-color: rgba(220, 38, 38, 0.3);
        }
    }
}

// Advanced Filters
.advancedFilters {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    border-radius: 24px;
    padding: 1.5rem;
    margin-top: 1rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    animation: morphIn 0.9s cubic-bezier(0.34, 1.56, 0.64, 1) 1.1s both;
}

.filterGroup {
    .filterLabel {
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.75rem;
        display: block;
        font-size: 0.875rem;
    }
}

.filterOptions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.filterOption {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    border-radius: 6px;
    transition: background-color 0.2s ease;
    cursor: pointer;
    animation: waveIn 0.5s ease-out both;

    @for $i from 1 through 8 {
        &:nth-child(#{$i}) {
            animation-delay: #{1.2 + ($i * 0.05)}s;
        }
    }

    &:hover {
        background: var(--bg-secondary);
    }

    input[type="checkbox"] {
        width: 1rem;
        height: 1rem;
    }
}

.optionIcon {
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
}

.optionColor {
    width: 0.75rem;
    height: 0.75rem;
    border-radius: 2px;
    flex-shrink: 0;
}

.filterActions {
    grid-column: 1 / -1;
    display: flex;
    justify-content: flex-end;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
    animation: waveIn 0.8s ease-out 1.6s both;
}

.clearFilters {
    @include button-base;
    background: transparent;
    color: var(--text-secondary);
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.875rem;

    &:hover {
        background: var(--bg-secondary);
        color: var(--text-primary);
    }
}

// Table Styles
.tableContainer {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    border-radius: 24px;
    margin-bottom: 2rem;
    overflow: hidden;
    animation: morphIn 0.9s cubic-bezier(0.34, 1.56, 0.64, 1) 1.7s both;
}

.tableHeader {
    padding: 1.5rem 1.5rem 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.tableTitle {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.tableCount {
    color: var(--text-secondary);
    font-size: 0.875rem;
    font-weight: 400;
}

.tableActions {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.sortLabel {
    font-size: 0.875rem;
    color: var(--text-secondary);
}

.sortSelect {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 24px;
    padding: 1rem;
    color: var(--text-primary);
    font-size: 0.875rem;

    &:focus {
        outline: none;
        border-color: var(--accent-color);
    }
}

.tableWrapper {
    overflow-x: auto;
}

.table {
    width: 100%;
    border-collapse: collapse;

    th {
        background-color: var(--bg-secondary);
        color: var(--text-primary);
        font-weight: 600;
        text-align: left;
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        white-space: nowrap;
    }

    td {
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        color: var(--text-primary);
        vertical-align: middle;
    }

    tr.tableRow {
        transition: background-color 0.2s ease;
        animation: waveIn 0.5s ease-out both;

        @for $i from 1 through 20 {
            &:nth-child(#{$i}) {
                animation-delay: #{1.8 + ($i * 0.03)}s;
            }
        }

        &:hover {
            background-color: var(--bg-secondary);
        }

        &:last-child {
            td {
                border-bottom: none;
            }
        }
    }
}

// Report Cell
.reportCell {
    .reportTitle {
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.25rem;
        font-size: 0.875rem;
    }

    .reportDescription {
        color: var(--text-secondary);
        font-size: 0.75rem;
        margin-bottom: 0.5rem;
        line-height: 1.4;
    }

    .reportMeta {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 0.75rem;
        color: var(--text-secondary);

        .metaIcon {
            width: 0.75rem;
            height: 0.75rem;
        }

        .reportId {
            font-family: monospace;
            background: var(--bg-secondary);
            padding: 0.565rem;
            border-radius: 24px;
        }
    }
}

// Type Badges
.typeBadge {
    padding: 0.25rem 0.75rem;
    border-radius: 24px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: capitalize;

    &.typeSpam {
        background: #f3f4f6;
        color: #374151;

        [data-theme="dark"] & {
            background: rgba(107, 114, 128, 0.2);
            color: #9ca3af;
        }
    }

    &.typeHarassment {
        background: #fef2f2;
        color: #dc2626;

        [data-theme="dark"] & {
            background: rgba(220, 38, 38, 0.2);
            color: #fca5a5;
        }
    }

    &.typeInappropriate {
        background: #fffbeb;
        color: #d97706;

        [data-theme="dark"] & {
            background: rgba(217, 119, 6, 0.2);
            color: #fcd34d;
        }
    }

    &.typeOther {
        background: #faf5ff;
        color: #7c3aed;

        [data-theme="dark"] & {
            background: rgba(124, 58, 237, 0.2);
            color: #c4b5fd;
        }
    }
}

// Severity Badges
.severityBadge {
    padding: 0.375rem 0.75rem;
    border-radius: 24px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;

    &.severityLow {
        background: #dcfce7;
        color: #166534;

        [data-theme="dark"] & {
            background: rgba(34, 197, 94, 0.2);
            color: #4ade80;
        }
    }

    &.severityMedium {
        background: #fef3c7;
        color: #92400e;

        [data-theme="dark"] & {
            background: rgba(245, 158, 11, 0.2);
            color: #fcd34d;
        }
    }

    &.severityHigh {
        background: #fecaca;
        color: #991b1b;

        [data-theme="dark"] & {
            background: rgba(239, 68, 68, 0.2);
            color: #fca5a5;
        }
    }

    &.severityCritical {
        background: #fecaca;
        color: #991b1b;
        border: 1px solid #ef4444;

        [data-theme="dark"] & {
            background: rgba(220, 38, 38, 0.2);
            border-color: rgba(220, 38, 38, 0.3);
            color: #fca5a5;
        }
    }
}

// Status Cell
.statusCell {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    .statusIcon {
        width: 1rem;
        height: 1rem;
        flex-shrink: 0;
    }

    .statusText {
        font-size: 0.875rem;
        font-weight: 500;
        text-transform: capitalize;
    }
}

// User Cell
.userCell {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    .userIcon {
        width: 1.25rem;
        height: 1.25rem;
        color: var(--text-secondary);
        flex-shrink: 0;
    }

    .userName {
        font-weight: 500;
        font-size: 0.875rem;
    }

    .userEmail {
        font-size: 0.75rem;
        color: var(--text-secondary);
    }
}

// Date Cell
.dateCell {
    .date {
        font-size: 0.875rem;
        font-weight: 500;
        margin-bottom: 0.125rem;
    }

    .timeAgo {
        font-size: 0.75rem;
        color: var(--text-secondary);
    }
}

// Assigned Cell
.assignedCell {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    .moderatorIcon {
        width: 1rem;
        height: 1rem;
        color: var(--accent-color);
    }

    .moderatorName {
        font-size: 0.875rem;
        font-weight: 500;
    }
}

.unassigned {
    color: var(--text-secondary);
    font-style: italic;
    font-size: 0.875rem;
}

// Action Buttons
.actionButtons {
    display: flex;
    gap: 0.25rem;
}

.assignButton,
.viewButton,
.resolveButton,
.moreButton {
    @include button-base;
    border-radius: 24px;
    transition: all 0.2s ease;

    .actionIcon {
        width: 1rem;
        height: 1rem;
    }
}

.assignButton {
    background: #dbeafe;
    color: #1e40af;

    &:hover {
        background: #bfdbfe;
    }

    [data-theme="dark"] & {
        background: rgba(59, 130, 246, 0.2);

        &:hover {
            background: rgba(59, 130, 246, 0.3);
        }
    }
}

.viewButton {
    background: var(--bg-secondary);
    color: var(--text-primary);

    &:hover {
        background: var(--border-color);
    }
}

.resolveButton {
    background: #dcfce7;
    color: #166534;

    &:hover {
        background: #bbf7d0;
    }

    [data-theme="dark"] & {
        background: rgba(34, 197, 94, 0.2);

        &:hover {
            background: rgba(34, 197, 94, 0.3);
        }
    }
}

.moreButton {
    background: var(--bg-secondary);
    color: var(--text-primary);

    &:hover {
        background: var(--border-color);
    }
}

// Empty and Loading States
.emptyState,
.loadingState {
    text-align: center;
    padding: 3rem 2rem;
    color: var(--text-secondary);
    animation: morphIn 0.9s cubic-bezier(0.34, 1.56, 0.64, 1) both;
}

.emptyIcon,
.loadingIcon {
    width: 3rem;
    height: 3rem;
    margin: 0 auto 1rem;
    color: var(--text-secondary);
    opacity: 0.5;
}

.emptyTitle,
.loadingState p {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.emptyDescription {
    color: var(--text-secondary);
    max-width: 300px;
    margin: 0 auto;
}

// Enhanced Morphing Animations
@keyframes morphIn {
    0% {
        opacity: 0;
        transform: translateY(40px) rotateX(90deg);
        filter: blur(20px);
    }

    50% {
        opacity: 0.5;
        filter: blur(5px);
    }

    100% {
        opacity: 1;
        transform: translateY(0) rotateX(0);
        filter: blur(0);
    }
}

@keyframes floatIn {
    0% {
        opacity: 0;
        transform: translateY(50px) scale(0.9);
    }

    60% {
        transform: translateY(-5px) scale(1.02);
    }

    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes waveIn {
    0% {
        opacity: 0;
        transform: translateY(30px) scale(0.95);
    }

    70% {
        opacity: 0.7;
        transform: translateY(-2px) scale(1.01);
    }

    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.animateSpin {
    animation: spin 1s linear infinite;
}

// Responsive Design
@include tablet {
    .contentArea {
        margin-left: 0;
    }

    .statsGrid {
        grid-template-columns: repeat(2, 1fr);
    }

    .advancedFilters {
        grid-template-columns: 1fr;
    }
}

@include mobile {
    .statsGrid {
        grid-template-columns: 1fr;
    }

    .filterButtons {
        flex-direction: column;
        align-items: stretch;
    }

    .quickFilters {
        justify-content: center;
    }

    .table {

        th,
        td {
            padding: 0.75rem 0.5rem;
        }
    }

    .actionButtons {
        flex-direction: column;
        gap: 0.125rem;
    }
}